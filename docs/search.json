[
  {
    "objectID": "04_mapme_biodiversity.html",
    "href": "04_mapme_biodiversity.html",
    "title": "4  L’outil mapme.biodiversity",
    "section": "",
    "text": "4.1 Démarche\nLe package mapme.biodiversity facilite l’analyse statistique de la biodiversité ou d’autres politiques et projets spatialisés. Il propose divers indicateurs pour évaluer la préservation de l’environnement et les activités humaines. Le package est conçu pour permettre des extensions futures grâce à des ressources et des indicateurs personnalisés.\nLe package fournit une interface unifiée pour télécharger et analyser différents jeux de données spatiales, gérant la complexité liée aux divers formats. Il simplifie l’accès aux données en interagissant avec plusieurs backends utilisés par les organisations qui distribuent ces données. Les utilisateurs peuvent contrôler l’analyse en sélectionnant les indicateurs à calculer, permettant ainsi un ajustement précis des processus.\nPour commencer, les utilisateurs saisissent un objet sf contenant uniquement des géométries de type polygone. Le package télécharge ensuite les données raster et vecteur spatiales et temporelles nécessaires correspondant à l’étendue du portefeuille. Les résultats sont ajoutés sous forme de colonnes de listes imbriquées dans l’objet portefeuille, permettant une utilisation aisée d’une large gamme d’indicateurs dans R.\nLe processus d’utilisation est le suivant :\nCode\nlibrary(DiagrammeR) # Package R pour produire des diagrammes Mermaid\n\n#| fig-cap: \"Processus de traitement avec mapme.biodiversity\"\n\nmermaid(\"\ngraph TB\n    AA(Définition des polygones d'analyse)\n    A(Définition des options)\n    B(Acquisition des ressources)\n    C(Calcul des indicateurs)\n    D(Analyse statistique avec R)\n    E(Export vers QGIS ou autre)\n    AA--&gt;A\n    A--&gt;B\n    B--&gt;C\n    C--&gt;D\n    C--&gt;E\n\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>L'outil mapme.biodiversity</span>"
    ]
  },
  {
    "objectID": "04_mapme_biodiversity.html#démarche",
    "href": "04_mapme_biodiversity.html#démarche",
    "title": "4  L’outil mapme.biodiversity",
    "section": "",
    "text": "Logo Mapme",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>L'outil mapme.biodiversity</span>"
    ]
  },
  {
    "objectID": "04_mapme_biodiversity.html#tutoriel-pratique-avec-mapme.biodiversity",
    "href": "04_mapme_biodiversity.html#tutoriel-pratique-avec-mapme.biodiversity",
    "title": "4  L’outil mapme.biodiversity",
    "section": "4.2 Tutoriel pratique avec mapme.biodiversity",
    "text": "4.2 Tutoriel pratique avec mapme.biodiversity\nNous allons maintenant découvrir comment utiliser le package mapme.biodiversity de manière pratique. Pour cela, nous allons travailler avec le jeu de données data/AP_Vahatra.geojson, qui contient des informations sur les aires protégées à Madagascar.\n\n4.2.1 Charger les données d’aires protégées\nNous allons commencer par charger notre jeu de données d’aires protégées, qui est stocké au format GeoJSON.\n\n\nCode\nlibrary(mapme.biodiversity)\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tmap)\nlibrary(progressr) # Pour avoir des bares de progression\nlibrary(tictoc) # Pour minuter des temps d'exécution\nlibrary(future) # Pour permettre du calcul parallèle\n\n# Charger le jeu de données AP_Vahatra\nAP_Vahatra &lt;- st_read(\"data/AP_Vahatra.geojson\", quiet = TRUE)\n\n\n\n\n4.2.2 Définir les options standard avec mapme_options\nAvant d’acquérir les ressources, nous devons définir certaines options pour le package, comme le répertoire de sortie.\n\n\nCode\n# Définir le répertoire de sortie\nmapme_options(outdir = \"data/mapme\")\n\n\n\n\n4.2.3 Exploration des indicateurs et des ressources disponibles\nAvant de se lancer dans l’acquisition des ressources, il est important de comprendre ce que le package peut faire. Utilisons les fonctions available_indicators() et available_resources() pour explorer les indicateurs et ressources disponibles.\n\n\nCode\n# Explorer les indicateurs disponibles\navailable_indicators()\n\n\n# A tibble: 38 × 3\n   name                          description                           resources\n   &lt;chr&gt;                         &lt;chr&gt;                                 &lt;list&gt;   \n 1 biodiversity_intactness_index Averaged biodiversity intactness ind… &lt;tibble&gt; \n 2 biome                         Areal statistics of biomes from TEOW  &lt;tibble&gt; \n 3 burned_area                   Monthly burned area detected by MODI… &lt;tibble&gt; \n 4 deforestation_drivers         Areal statistics of deforestation dr… &lt;tibble&gt; \n 5 drought_indicator             Relative wetness statistics based on… &lt;tibble&gt; \n 6 ecoregion                     Areal statstics of ecoregions based … &lt;tibble&gt; \n 7 elevation                     Statistics of elevation based on NAS… &lt;tibble&gt; \n 8 exposed_population            Number of people exposed to conflict… &lt;tibble&gt; \n 9 fatalities                    Number of fatalities by group of con… &lt;tibble&gt; \n10 gsw_change                    Statistics of the surface water chan… &lt;tibble&gt; \n# ℹ 28 more rows\n\n\nCode\n# Explorer les ressources disponibles\navailable_resources()\n\n\n# A tibble: 34 × 5\n   name                          description                licence source type \n   &lt;chr&gt;                         &lt;chr&gt;                      &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;\n 1 accessibility_2000            Accessibility data for th… See JR… https… rast…\n 2 biodiversity_intactness_index Biodiversity Intactness I… CC-BY-… https… rast…\n 3 chelsa                        Climatologies at High res… Unknow… https… rast…\n 4 chirps                        Climate Hazards Group Inf… CC - u… https… rast…\n 5 esalandcover                  Copernicus Land Monitorin… CC-BY … https… rast…\n 6 fritz_et_al                   Drivers of deforestation … CC-BY … https… rast…\n 7 gfw_emissions                 Global Forest Watch - CO2… CC-BY … https… rast…\n 8 gfw_lossyear                  Global Forest Watch - Yea… CC-BY … https… rast…\n 9 gfw_treecover                 Global Forest Watch - Per… CC-BY … https… rast…\n10 global_surface_water_change   Global Surface Water - Ch… https:… https… rast…\n# ℹ 24 more rows\n\n\nCes fonctions permettent de voir la liste des indicateurs et ressources que le package propose. Vous pouvez également consulter l’aide en ligne pour chaque indicateur ou ressource afin de mieux comprendre leur utilité.\n\nExercice : Quelles ressources sont disponibles pour calculer la pente, l’altitude, la distance aux villes, le couvert forestier annuel et la densité de population ? Consultez régulièrement cette liste, car elle peut évoluer au fil des mises à jour du package.\n\n\n\n4.2.4 Acquisition des ressources nécessaires\nNous allons maintenant acquérir les ressources spatiales nécessaires pour nos analyses. Le package mapme.biodiversity propose un large éventail de ressources, notamment des données d’altitude, de couvert forestier, et de temps de déplacement jusqu’à une ville.\n\n\nCode\n# Acquérir les ressources pour l'élévation\nAP_Vahatra &lt;- get_resources(\n  x = AP_Vahatra,\n  get_nasa_srtm()\n)\n\n# Calculer l'indicateur d'élévation\n\ntic() # On lance un minuteur\nwith_progress({\n  AP_Vahatra &lt;- AP_Vahatra %&gt;%\n    calc_indicators(calc_elevation())\n})\ntoc() # On relève le minuteur, 123 secondes sur mon test\n\n\n\n\n4.2.5 Parallélisation avec {future}\nLe package mapme.biodiversity suit le paradigme de calcul parallèle du package {future}. Cela signifie que vous, en tant qu’utilisateur, pouvez décider de configurer le calcul en parallèle ou non. Depuis la version 0.9 de {mapme.biodiversity}, un pré-découpage est appliqué à tous les actifs du portefeuille, ce qui permet de diviser les actifs en composantes de taille approximativement égale. Ces composantes peuvent ensuite être itérées en parallèle afin d’accélérer le traitement. Les valeurs des indicateurs seront ensuite agrégées automatiquement.\nVoici un exemple d’utilisation de la parallélisation avec le plan cluster, qui permet de répartir les calculs sur plusieurs cœurs de votre machine :\n\n\nCode\nplan(cluster, workers = 6)\n\n# tic() # On lance un minuteur\nwith_progress({\n  AP_Vahatra &lt;- AP_Vahatra %&gt;%\n    calc_indicators(calc_elevation())\n})\n\nplan(sequential) # On libère les processus parallèles réservés\n# toc() # On relève le minuteur, 69 secondes sur mon test\n\n\n\n\n4.2.6 Acquisition des autres ressources\n\n\nCode\n# Acquérir les ressources pour la pente, le couvert forestier et le temps de déplacement\nwith_progress({\n  AP_Vahatra &lt;- AP_Vahatra %&gt;%\n    get_resources(get_gfw_treecover(),\n                  get_gfw_lossyear(),\n                  get_nelson_et_al(ranges = \"5k_110mio\")\n  )\n})\n\n\n\n\n4.2.7 Calcul des indicateurs\nAprès l’acquisition des ressources, nous allons calculer les indicateurs pour chaque polygone de notre portefeuille. Les indicateurs permettent de synthétiser les informations spatiales pour chaque entité géographique (aire protégée) de notre jeu de données.\n\n\nCode\nplan(cluster, workers = 6)\n# tic()\nwith_progress({\n  AP_Vahatra &lt;- AP_Vahatra %&gt;%\n    calc_indicators(\n      calc_slope(),\n      calc_treecover_area(years = 2000:2023, min_size = 1, min_cover = 30),\n      calc_traveltime()\n    )\n})\nplan(sequential)\n# toc() # 331 secondes\n\n\n\n\n4.2.8 Visualisation des résultats\nPour visualiser les résultats, nous allons utiliser le package tmap. Cela nous permettra de cartographier certaines des valeurs d’indicateurs calculées, telles que l’élévation moyenne ou la couverture forestière des aires protégées.\n\n\nCode\n# Visualiser les aires protégées colorées par l'élévation moyenne\ntmap_mode(\"view\")\nAP_Vahatra %&gt;%\n  portfolio_long() %&gt;%\n  filter(variable == \"elevation_mean\") %&gt;%\n  tm_shape() +\n  tm_polygons(col = \"value\", title = \"Altitude Moyenne (m)\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>L'outil mapme.biodiversity</span>"
    ]
  }
]